version: '3.8'

services:

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - 9595:9595
    depends_on:
      - prometheus
    user: 1000:1000
    volumes:
      - ./grafana:/etc/grafana
      - ./grafana_data:/var/lib/grafana
    environment:
      GF_ALERTING_ENABLED: false
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_DEFAULT_INSTANCE_NAME: grafana.lab.charj.dev
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-clock-panel
      GF_LOG_FILTERS: rendering:debug
      GF_METRICS_ENABLED: true
      GF_PATHS_TEMP_DATA_LIFETIME: 0
      GF_RENDERING_CALLBACK_URL: http://grafana:9595/
      GF_SECURITY_COOKIE_SECURE: true
      GF_SECURITY_DISABLE_GRAVATAR: true
      GF_SECURITY_ALLOW_EMBEDDING: false
      GF_SERVER_DOMAIN: grafana.lab.charj.dev
      GF_SERVER_ENFORCE_DOMAIN: false
      GF_SERVER_HTTP_PORT: 9595
      GF_SERVER_HTTP_PROTOCOL: https
      GF_SERVER_ROOT_URL: https://grafana.lab.charj.dev/
      GF_SERVER_SERVE_FROM_SUB_PATH: false
      GF_SNAPSHOTS_EXTERNAL_ENABLED: false
      GF_USERS_ALLOW_SIGN_UP: false
      GF_USERS_VIEWERS_CAN_EDIT: false
      # - "GF_RENDERING_SERVER_URL=http://grafana-renderer:8081/render"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - proxy
    user: 1000:1000
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles

  exporter-node:
    image: quay.io/prometheus/node-exporter:latest
    restart: unless-stopped
    hostname: docker.lab.charj.dev
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - --path.rootfs=/host
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    deploy:
      mode: global

  exporter-idrac:
    image: mrlhansen/idrac_exporter:5b0b360
    container_name: exporter-idrac
    restart: unless-stopped
    volumes:
      - ./idrac/exporter.yml:/etc/prometheus/idrac.yml
    ports:
      - 9348:9348

  exporter-vmware:
    image: pryorda/vmware_exporter:latest
    container_name: exporter-vmware
    restart: always
    env_file: ./vmware/.env
    ports:
      - 9275:9272

  exporter-a2s-sotf:
    container_name: exporter-a2s-sotf
    ports:
        - 9841:9841
    image: armsnyder/a2s-exporter
    environment:
      A2S_EXPORTER_QUERY_ADDRESS: 192.168.0.75:27016
      A2S_EXPORTER_PORT: 9841
      A2S_EXPORTER_PATH: /metrics
      A2S_EXPORTER_NAMESPACE: a2s
      A2S_EXPORTER_EXCLUDE_PLAYER_METRICS: false
      A2S_EXPORTER_A2S_ONLY_METRICS: false
      A2S_EXPORTER_MAX_PACKET_SIZE: 1400

  # exporter-discord:
  #   build:
  #     context: ./discord
  #     dockerfile: Dockerfile
  #   container_name: exporter-discord
  #   restart: always
  #   env_file: ./discord/.env
  #   ports:
  #     - 9324:8080
  #   environment:
  #     SERVERID: ${DISCORD_SERVER_ID}

  exporter-unifi:
    image: ghcr.io/unpoller/unpoller:latest
    restart: unless-stopped
    ports:
      - 9130:9130
    container_name: exporter-unifi
    env_file:
      - './unifi/.env'

networks:
  proxy:
    external: true
